<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="ALL" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="4024404a-bdb1-473c-8373-6b0242978a9c" name="Changes" comment="[master][fix] gitignore">
      <change beforePath="$PROJECT_DIR$/.gitignore" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/.gitignore" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/banner-service.iml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/http-test/http-test.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/modules.xml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/vcs.xml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/Dockerfile" beforeDir="false" afterPath="$PROJECT_DIR$/Dockerfile" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Makefile" beforeDir="false" afterPath="$PROJECT_DIR$/Makefile" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/docker-compose.yml" beforeDir="false" afterPath="$PROJECT_DIR$/docker-compose.yml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/internal/app/http/banner_handlers.go" beforeDir="false" afterPath="$PROJECT_DIR$/internal/app/http/banner_handlers.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/internal/app/http/requests/banner_requests.go" beforeDir="false" afterPath="$PROJECT_DIR$/internal/app/http/requests/banner_requests.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/internal/storage/postgres/postgres_storage.go" beforeDir="false" afterPath="$PROJECT_DIR$/internal/storage/postgres/postgres_storage.go" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Go File" />
      </list>
    </option>
  </component>
  <component name="GOROOT" url="file://$PROJECT_DIR$/../../../../Programs/GoSdk/go1.22rc2" />
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="MarkdownSettingsMigration">
    <option name="stateVersion" value="1" />
  </component>
  <component name="ProblemsViewState">
    <option name="selectedTabId" value="CurrentFile" />
  </component>
  <component name="ProjectColorInfo">{
  &quot;associatedIndex&quot;: 7
}</component>
  <component name="ProjectId" id="2eeUoRYov4NARxBo2koa4fe9ZwH" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">{
  &quot;keyToString&quot;: {
    &quot;DefaultGoTemplateProperty&quot;: &quot;Go File&quot;,
    &quot;Go Build.go build banner-service/cmd/banners.executor&quot;: &quot;Debug&quot;,
    &quot;Go Build.go build banner-service/cmd/migrator.executor&quot;: &quot;Run&quot;,
    &quot;Go Test.TestGetUserBanner_WithCreatedBanner_ReturnsOk in banner-service/tests/suite.executor&quot;: &quot;Debug&quot;,
    &quot;Go Test.TestGetUserBanner_WithInvalidParameters_ReturnsBadRequest in banner-service/tests/suite.executor&quot;: &quot;Run&quot;,
    &quot;Go Test.TestGetUserBanner_WithoutExistingBanner_ReturnsNotFound in banner-service/tests/suite.executor&quot;: &quot;Run&quot;,
    &quot;Go Test.TestShouldPass in banner-service/tests/suite.executor&quot;: &quot;Run&quot;,
    &quot;Go Test.Test_GetUserBanner_WithoutToken_ReturnsUnauthorized in banner-service/tests/suite.executor&quot;: &quot;Run&quot;,
    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.go.formatter.settings.were.checked&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.go.migrated.go.modules.settings&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.go.modules.automatic.dependencies.download&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.go.modules.go.list.on.any.changes.was.set&quot;: &quot;true&quot;,
    &quot;git-widget-placeholder&quot;: &quot;master&quot;,
    &quot;go.import.settings.migrated&quot;: &quot;true&quot;,
    &quot;last_opened_file_path&quot;: &quot;D:/projects/mine/go/banner-service&quot;,
    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,
    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,
    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,
    &quot;settings.editor.selected.configurable&quot;: &quot;preferences.pluginManager&quot;
  }
}</component>
  <component name="RecentsManager">
    <key name="MoveFile.RECENT_KEYS">
      <recent name="D:\projects\mine\go\banner-service\internal\storage" />
      <recent name="D:\projects\mine\go\banner-service\cmd\migrator\migrations" />
      <recent name="D:\projects\mine\go\banner-service\internal\app\http" />
      <recent name="D:\projects\mine\go\banner-service\internal\app\http\handlers" />
      <recent name="D:\projects\mine\go\banner-service\internal\domain\models" />
    </key>
  </component>
  <component name="RunManager" selected="Go Build.go build banner-service/cmd/banners">
    <configuration name="go build banner-service/cmd/banners" type="GoApplicationRunConfiguration" factoryName="Go Application" temporary="true" nameIsGenerated="true">
      <module name="banner-service" />
      <working_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="banner-service/cmd/banners" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$/cmd/banners/main.go" />
      <method v="2" />
    </configuration>
    <configuration name="TestGetUserBanner_WithCreatedBanner_ReturnsOk in banner-service/tests/suite" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="banner-service" />
      <working_directory value="$PROJECT_DIR$/tests/suite" />
      <root_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="banner-service/tests/suite" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTestGetUserBanner_WithCreatedBanner_ReturnsOk\E$" />
      <method v="2" />
    </configuration>
    <configuration name="TestGetUserBanner_WithInvalidParameters_ReturnsBadRequest in banner-service/tests/suite" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="banner-service" />
      <working_directory value="$PROJECT_DIR$/tests/suite" />
      <root_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="banner-service/tests/suite" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTestGetUserBanner_WithInvalidParameters_ReturnsBadRequest\E$" />
      <method v="2" />
    </configuration>
    <configuration name="TestGetUserBanner_WithoutExistingBanner_ReturnsNotFound in banner-service/tests/suite" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="banner-service" />
      <working_directory value="$PROJECT_DIR$/tests/suite" />
      <root_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="banner-service/tests/suite" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTestGetUserBanner_WithoutExistingBanner_ReturnsNotFound\E$" />
      <method v="2" />
    </configuration>
    <configuration name="run" type="MAKEFILE_TARGET_RUN_CONFIGURATION" factoryName="Makefile" temporary="true">
      <makefile filename="$PROJECT_DIR$/Makefile" target="run" workingDirectory="" arguments="">
        <envs />
      </makefile>
      <method v="2" />
    </configuration>
    <configuration default="true" type="docker-deploy" factoryName="docker-compose.yml" temporary="true">
      <deployment type="docker-compose.yml">
        <settings />
      </deployment>
      <method v="2" />
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="Go Build.go build banner-service/cmd/banners" />
        <item itemvalue="Makefile Target.run" />
        <item itemvalue="Go Test.TestGetUserBanner_WithCreatedBanner_ReturnsOk in banner-service/tests/suite" />
        <item itemvalue="Go Test.TestGetUserBanner_WithInvalidParameters_ReturnsBadRequest in banner-service/tests/suite" />
        <item itemvalue="Go Test.TestGetUserBanner_WithoutExistingBanner_ReturnsNotFound in banner-service/tests/suite" />
      </list>
    </recent_temporary>
  </component>
  <component name="SharedIndexes">
    <attachedChunks>
      <set>
        <option value="bundled-gosdk-e58f7cfedaf7-155fe4b6e3a0-org.jetbrains.plugins.go.sharedIndexes.bundled-GO-233.14015.113" />
      </set>
    </attachedChunks>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State />
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="VcsManagerConfiguration">
    <MESSAGE value="[master][add] docker" />
    <MESSAGE value="[master][add] docker, make and others" />
    <MESSAGE value="[master][add] gitignore" />
    <option name="LAST_COMMIT_MESSAGE" value="[master][add] gitignore" />
  </component>
  <component name="VgoProject">
    <settings-migrated>true</settings-migrated>
  </component>
  <component name="XDebuggerManager">
    <breakpoint-manager>
      <breakpoints>
        <line-breakpoint enabled="true" type="DlvLineBreakpoint">
          <url>file://$PROJECT_DIR$/tests/suite/suite_test.go</url>
          <line>65</line>
          <option name="timeStamp" value="7" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="DlvLineBreakpoint">
          <url>file://$PROJECT_DIR$/internal/storage/local/local_storage.go</url>
          <line>86</line>
          <option name="timeStamp" value="9" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="DlvLineBreakpoint">
          <url>file://$PROJECT_DIR$/internal/storage/local/local_storage.go</url>
          <line>75</line>
          <option name="timeStamp" value="13" />
        </line-breakpoint>
      </breakpoints>
    </breakpoint-manager>
  </component>
</project>